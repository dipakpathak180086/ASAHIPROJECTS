function(format)
	-- if resolver then return end -- for breaking loops/detecting in AEPWorks
	-- write your code here..
-- if resolver then return end -- for breaking loops/detecting in AEPWorks
	-- write your code here..
  if resolver then 
    return json.encode("returns")
  end  
  
  local Http_Status_Ok = 200
  local Qty = 1 -- store the bin starndard qty
  
   local http = require("socket.http") -- Loads the HTTP module
      --call api
      local responseData, statusCode = http.request("http://"..tostring(ServerIp).."/asahi/api/service/GetModel")
     
      if(statusCode ~= Http_Status_Ok) then
        sa.msg("Error Occured on server side, status code "..tostring(statusCode).." error message "..tostring(responseData))
        sa.quantity(0) -- this field is madatory otherwise input qty field will come automatically
        return false
      end
      -- if everything is fine then decode json data
      local jsonDetails = json.decode(responseData)
      if(jsonDetails.Response == "Y") then
          
         SelectedModel = sa.select ("Select Model",tostring(jsonDetails.PartNo),nil,false)
          if tostring(SelectedModel)=="" then
             sa.quantity(0) -- this field is madatory otherwise input qty field will come automatically
             return false
          else
              local EnterQty = 0
               EnterQty=sa.input("Model:("..tostring(SelectedModel)..") Enter Qty:",Qty,"%u","",true) -- input unsigned intergar only
             
                if tostring(EnterQty) == "" or tonumber(EnterQty) == 0 then
                  sa.msg("Enter Qty")
                  sa.quantity(0)
                  return false
               end
             
             
             
              local ApiUrl = "http://"..tostring(ServerIp).."/asahi/api/service/Save/" .. tostring(SelectedModel).."/" ..tostring(EnterQty)
              --sa.msg(tostring(ApiUrl))
              local responseDataSave, statusCodeSave = http.request(ApiUrl)
              if(statusCodeSave ~= Http_Status_Ok) then
                sa.msg("Error Status:"..tostring(statusCodeSave))
                sa.msg("Error message "..tostring(responseDataSave))
                sa.quantity(0) -- this field is madatory otherwise input qty field will come automatically
                return
              end
              -- if everything is fine then decode json data
              local jsonProduction = json.decode(responseDataSave)
              if(jsonProduction.Response == "Y") then
                --set barcode data
                --sa.msg(tostring(jsonProduction.Barcode))
                Format.BARCODE.data = jsonProduction.Barcode
                Format.BARCODE.value = Format.BARCODE.data 
                --now print the data
                sa.quantity(EnterQty) 
                return true
              else
                sa.msg("Error: "..tostring(jsonProduction.ErrorMessage))
                sa.quantity(0) -- this field is madatory otherwise input qty field will come automatically
                return false
              end
          end
       
      else
        sa.msg("Invalid Model Data")
        sa.quantity(0) -- this field is madatory otherwise input qty field will come automatically
        return false
      end
 
  
  
   
end
